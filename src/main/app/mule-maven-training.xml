<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" usePersistentConnections="false" doc:name="HTTP Listener Configuration" />
    <spring:beans>
        <spring:bean id="inMemoryDatabase" name="inMemoryDatabase" class="com.mulesoft.training.Database" />
    </spring:beans>
    <db:derby-config name="Derby_Configuration" url="jdbc:derby:memory:muleEmbeddedDB;create=true" doc:name="Derby Configuration" />
    <apikit:config name="Router" raml="flights.raml" consoleEnabled="true" consolePath="console" keepRamlBaseUri="false" doc:name="Router" />
    <jms:activemq-connector name="LocalMQ" brokerURL="vm://localhost" validateConnections="true" doc:name="Active MQ"/>
    <flow name="ping">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/ping" doc:name="HTTP ping" />
        <set-payload value="#[&quot;pong&quot;]" doc:name="Pong" />
    </flow>
    <flow name="flights">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights/*" doc:name="HTTP flights" />
        <apikit:router config-ref="Router" doc:name="APIkit Router" />
        <jms:outbound-endpoint queue="flights" connector-ref="LocalMQ" doc:name="JMS"/>
    </flow>
    <flow name="static">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/static/*" allowedMethods="GET" doc:name="HTTP static" />
        <http:static-resource-handler resourceBase="src/main/static" defaultFile="index.html" doc:name="HTTP Static Resource Handler" />
    </flow>
    <flow name="IncomingAudit">
        <jms:inbound-endpoint queue="flights" connector-ref="LocalMQ" doc:name="IncomingJMS"/>
        <logger message="JMS #[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="put:/v1/flights/{flight_id}:Router">
        <dw:transform-message doc:name="From JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <db:update config-ref="Derby_Configuration" doc:name="Update flight">
            <db:parameterized-query><![CDATA[update flights set PRICE = :price, ORIGIN = :origin, DESTINATION = :destination where GUID = :guid]]></db:parameterized-query>
			<db:in-param name="price" value="#[payload.PRICE]"/>
			<db:in-param name="origin" value="#[payload.ORIGIN]"/>
			<db:in-param name="destination" value="#[payload.DESTINATION]"/>
			<db:in-param name="guid" value="#[message.inboundProperties.'http.uri.params'.flight_id]"/>
        </db:update>
        <dw:transform-message doc:name="To JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="delete:/v1/flights/{flight_id}:Router">
        <db:delete config-ref="Derby_Configuration" doc:name="Delete flight">
            <db:parameterized-query><![CDATA[delete from flights where guid = :guid]]></db:parameterized-query>
			<db:in-param name="guid" value="#[message.inboundProperties.'http.uri.params'.flight_id]"/>
        </db:delete>
    </flow>
    <flow name="get:/v1/flights:Router">
        <db:select config-ref="Derby_Configuration" doc:name="Get flights">
            <db:parameterized-query><![CDATA[select * from flights]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="To JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="get:/v1/flights/{flight_id}:Router">
        <db:select config-ref="Derby_Configuration" doc:name="Get flight">
            <db:parameterized-query><![CDATA[select * from flights where guid = :guid]]></db:parameterized-query>
            <db:in-param name="guid" value="#[message.inboundProperties.'http.uri.params'.flight_id]"/>
        </db:select>
        <dw:transform-message doc:name="To JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="post:/v1/flights:application/json:Router">
        <dw:transform-message doc:name="From JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>
        <expression-component doc:name="Expression"><![CDATA[flowVars.guid = java.util.UUID.randomUUID().toString();
payload.GUID = flowVars.guid;]]></expression-component>
        <db:insert config-ref="Derby_Configuration" doc:name="Insert flight">
            <db:parameterized-query><![CDATA[INSERT INTO FLIGHTS(PRICE, ORIGIN, DESTINATION, GUID) VALUES ( :price, :origin, :destination, :guid)]]></db:parameterized-query>
			<db:in-param name="price" value="#[payload.PRICE]"/>
			<db:in-param name="origin" value="#[payload.ORIGIN]"/>
			<db:in-param name="destination" value="#[payload.DESTINATION]"/>
			<db:in-param name="guid" value="#[payload.GUID]"/>
		</db:insert>
        <dw:transform-message doc:name="To JSON">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	response:payload,
	guid: flowVars.guid
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>